/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy project to get you started.
 * For more details take a look at the Groovy Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0.1/userguide/tutorial_groovy_projects.html
 */

plugins {
    // Apply the groovy plugin to add support for Groovy
    id 'groovy'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}


dependencies {
    // Use the latest Groovy version for building this library
    compileOnly 'org.codehaus.groovy:groovy:2.5.8'
    testImplementation 'org.codehaus.groovy:groovy:2.5.8'

    // Use the awesome Spock testing and specification framework
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'

    // env based test
    testImplementation 'com.github.stefanbirkner:system-rules:1.19.0'

    // loading enb properties
    testImplementation 'com.agorapulse.testing:fixt:0.1.3'

    // parsing stored env properties
    testImplementation 'org.yaml:snakeyaml:1.25'
}

task printEnvs() {
    doLast {
        final List<String> SKIP_WORDS = ['TOKEN', 'KEY', 'PASSWORD', 'SECRET']

        System.getenv().each {
            if (SKIP_WORDS.every { word -> !it.key.contains(word) }) {
                println "${it.key.padRight(30)}: $it.value"
            }
        }

        if (System.getenv('GITHUB_EVENT_PATH')) {
            println 'github event:'
            println new File(System.getenv('GITHUB_EVENT_PATH')).text
        }
    }
}

build.dependsOn printEnvs
